
study_area_name: "Region Sjælland" # Name of region in datasæt. Must be a valid name of a Danish region or municipality

# Filepaths for... 

# INPUT DATA

# administrative boundaries
adm_boundaries_fp: "../data/input/DAGI10MULTIGEOM_GPKG_HF_20250504080002/regionsinddeling.gpkg" # Data set with administrative boundaries
sub_adm_boundaries_fp: "../data/input/DAGI10MULTIGEOM_GPKG_HF_20250504080002/kommuneinddeling.gpkg" # Data set with administrative boundaries

# CVR data
cvr_address_input_fp: "../data/input/cvr/CVR_V1_Adressering_TotalDownload_csv_Current_8.csv"
cvr_brancher_input_fp: "../data/input/cvr/CVR_V1_Branche_TotalDownload_csv_Current_8.csv"
cvr_penhed_input_fp: "../data/input/cvr/CVR_V1_Produktionsenhed_TotalDownload_csv_Current_8.csv"

# DAR data
input_address_fp: "../data/input/adresser/DAR_V1_Adresse_TotalDownload_csv_Current_256.csv" #"../data/input/adresser/Adresse.parquet"
address_points_fp:  "../data/input/adresser/DAR_V1_Adressepunkt_TotalDownload_csv_Current_256.csv" #"../data/input/adresser/Adressepunkt.parquet"
housenumbers_fp:  "../data/input/adresser/DAR_V1_Husnummer_TotalDownload_csv_Current_256.csv" #"../data/input/adresser/Husnummer.parquet"

# BBR data
bbr_fp:  "../data/input/bbr/BBR_V1_Enhed_TotalDownload_csv_Current_263.csv"


# PROCESSED DATA
addresses_fp_all: "../data/processed/adresser/addresses-full.parquet"
study_area_fp: "../data/processed/adm_boundaries/study_area.gpkg"
sub_study_areas_fp: "../data/processed/adm_boundaries/sub_areas.parquet"

address_bbr_fp: "../data/processed/bbr/adgangsadresser_beboelse.parquet"

destinations_combined_agg_fp: "../data/processed/destinations/osm-cvr-combined-aggregated.parquet"
destinations_combined_fp: "../data/processed/destinations/osm-cvr-combined.parquet"

osm_destinations_fp: "../data/processed/osm/all_osm_services.gpkg"
cvr_destinations_fp:  "../data/processed/cvr/cvr-services-w-address.gpkg"
cvr_destinations_all_fp:  "../data/processed/cvr/cvr-services-all.gpkg"


# RESULTS


# NOTE: Filepaths for exported maps, html, and csv files are defined in the py-scripts

# Define CVR codes for each service/destination type
hb_codes_dict:
    doctor-gp: 862100
    dentist: 862300
    pharmacy: 477300
    kindergarten: 889130
    nursery: 889120
    school: 852010
    supermarket: 471120
    discount_supermarket: 471130
    library: 911100
    train_station: 49 # This is not a CVR code, but used to identify train stations in the final data set
    sports_facility: 93 #  This is not a CVR code, but used to identify sports facilities in the final data set


# Define tags and values used to download destination data from OSM
osm_queries:
  doctor-gp:
    - amenity: doctors
    - amenity: general_practitioner
    - amenity: clinic
    - healthcare: doctor
  dentist:
    - amenity: dentist
    - healthcare: dentist
  pharmacy:
    - amenity: pharmacy
  kindergarten:
    - amenity: kindergarten
  nursery:
    - amenity: nursery
    - amenity: childcare
  school:
    - amenity: school
  supermarket:
    - shop: supermarket
    - shop: grocery
  discount_supermarket:
    - amenity: convenience
  library:
    - amenity: library
  sports_facility:
    - amenity: sports_centre
    - leisure: sports_centre
    - club: sport
  train_station:
    - railway: station

# Define here which service types to include from each source in the EXPORTED data set to be used for the analysis
# All service types will be included in the comparison of data sources
osm_export_types:
- doctor
- dentist
- pharmacy
- kindergarten-nursery
-  #school
- recreation
- library
- sports_facility
- shop
- train_station

cvr_export_types:
- doctor
- dentist
- pharmacy
- kindergarten-nursery
- school
- library
- sports_facility
- shop
- train_station


# Mapping between service types and subcategories
sub_service_to_main: 
    doctor: 
        - doctor-gp
    dentist: 
        - dentist
    pharmacy: 
        - pharmacy
    kindergarten-nursery:
        - nursery
        - kindergarten
    school: 
        - school
    library: 
        - library
    sports_facility: 
        - sports_facility
    shop: 
        - supermarket
        - discount_supermarket
    train_station: 
        - train_station

